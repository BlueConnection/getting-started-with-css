/*
  Variables declared here - these are the colors for my pages as well as the font stacks and sizes.

  We specify these variables in :root instead of html for several reasons:

  1) There is a before and after associated with html and by using :root,
     we don't have to worry about them as :root covers the entire DOM.

  2) Specificity - a pseudo class is more heavily weighted than a simple element like html.

  Note: targeting * is even worse than targeting html as * is easily overriden as it has 0 specificity.
*/
:root {
  --aqua-ocean: #0477bf;
  --aqua-water: #048abf;
  --aqua-green: #3c92a6;
  --sand: #bfb19f;
  --aqua-foam: #aed3f2;
  --font-size: 1.3rem;
  --lato: "Lato", sans-serif; /* sans-serif fonts don't have decorative lines or tapers */
  --play-fair-display: "Playfair Display", serif; /* serif fonts do have decorative lines or tapers */
}

/*
  Border box model: https://css-tricks.com/box-sizing/
*/
html {
  box-sizing: border-box; /* By default, a website's box-sizing is set to content-box. */
}

/*
  Pseudo classes (:) allow you to style different states of an element.

  e.g., When you hover over it, when it is disabled, when it is the first child of its parent, etc.

  Pseudo elements (::) allow you to style different parts of an element.

  e.g., The first line, the first letter, inserting content before or after, etc.
*/
*,
*::before,
*::after {
  box-sizing: inherit;
}

/*
  Allows elements in body to be stretched to the edges of the screen.

  Depending on the browser, padding or margin will be applied - we target both to 0 to address this.
*/
body {
  padding: 0;
  margin: 0;
  font-family: var(--lato);
  background-color: var(--aqua-ocean);
  color: var(--aqua-foam);
  font-size: var(--font-size);
}

/*
  h<#> and p tags have 1em of margin by default.

  To easier style these elements, we remove the default margin on them.

  Note: The margin of two elements will collapse (e.g., 1 + 1 = 1).
*/
h1,
h2,
h3 {
  margin: 0;
}

a {
  color: var(--sand);
}
a:hover {
  color: var(--aqua-green);
  text-decoration: none; /* Accessibility principles indicate that there needs to be a way for any links to be obvious before any hover state. */
}

#intro {
  padding-bottom: 18rem;
}
#intro p {
  font-size: 1rem;
  line-height: 1.5; /* Do not provide a unit of measure! (1.5 * whatever happens to be the font size) */
}
#intro .name {
  font-family: var(--play-fair-display);
}
.name span {
  font-family: var(--lato);
  font-size: 4rem;
  color: var(--sand);
  display: block;
}
#intro h2 {
  font-size: 4rem;
  font-weight: normal;
}

#contact {
  width: 400px;
  text-align: center;
  margin: 0 auto; /* mt & mb are 0, ml & mr are auto - this is a way to center elements */
  padding: 3rem 0;
}
#contact p:last-child {
  margin-top: 3rem;
}

nav {
  font-family: var(--lato);
  font-size: 80%;
  padding: 1rem;
}
nav h1 a {
  font-family: var(--lato);
}
nav ul {
  list-style-type: none; /* Removes the bullets of your li elements. */
  padding: 0; /* To remove the indent of the li elements, we set both padding and margin to 0 (browsers use either padding or margin). */
  margin: 0; /* " */

  display: flex;
  flex-flow: row wrap; /* Allow elements to wrap onto another line. */
  justify-content: center; /* Center content in the main axis (e.g., display of row is horizontal). */
  align-items: center; /* Center content in the cross axis (e.g., display of row is vertical). */
  gap: 2rem;
}
nav li:first-child {
  flex-basis: 100%; /* Gets name in the nav bar in its own row above the other links. */
  text-align: center;
}
nav [class*="fa-"] {
  font-size: 150%;
  color: var(--sand);
}
nav h1 [class*="fa-"] {
  font-size: 100%;
  color: var(--sand);
}
nav a {
  color: var(--aqua-foam);
  text-decoration: none;
  display: block; /* Makes text of links more easy to click? */
}
nav a:hover {
  color: var(--sand);
}
nav [class*="fa-"]:hover {
  color: var(--aqua-green);
}

.button {
  background-color: var(--aqua-green);
  padding: 0.5rem;
  border-radius: 5px;
}
.button:hover {
  color: var(--aqua-green);
  background-color: var(--aqua-foam);
}

/*
  850px because extensive testing shows that this is a good point.
*/
@media (min-width: 850px) {
  nav {
    max-width: 1200px;
    margin: 0 auto;
  }
  nav li:first-child {
    flex-basis: auto; /* Reset the flex-basis from 100% to auto. */
    text-align: left;
    margin-right: auto;
  }
}

footer {
  text-align: center;
}
footer ul {
  list-style-type: none;
  padding: 0;
  margin: 2rem 0;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  gap: 3rem;
  font-size: 3rem;
}
